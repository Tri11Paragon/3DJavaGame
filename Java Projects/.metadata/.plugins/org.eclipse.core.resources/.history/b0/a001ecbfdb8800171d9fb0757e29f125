/*     */ import java.io.BufferedOutputStream;
/*     */ import java.io.DataInputStream;
/*     */ import java.io.DataOutputStream;
/*     */ import java.io.PrintStream;
/*     */ import java.net.Socket;
/*     */ import java.net.SocketAddress;
/*     */ import java.net.SocketException;
/*     */ import java.util.ArrayList;
/*     */ import java.util.Collections;
/*     */ import java.util.List;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class pf
/*     */ {
/*  20 */   public static final Object a = new Object();
/*     */   public static int b;
/*     */   public static int c;
/*  23 */   private Object g = new Object();
/*     */   
/*     */ 
/*     */   private Socket h;
/*     */   
/*     */ 
/*     */   private final SocketAddress i;
/*     */   
/*     */ 
/*     */   private DataInputStream j;
/*     */   
/*     */ 
/*     */   private DataOutputStream k;
/*     */   
/*  37 */   private boolean l = true;
/*     */   
/*  39 */   private List m = Collections.synchronizedList(new ArrayList());
/*  40 */   private List n = Collections.synchronizedList(new ArrayList());
/*  41 */   private List o = Collections.synchronizedList(new ArrayList());
/*     */   
/*     */   private ti p;
/*  44 */   private boolean q = false;
/*     */   
/*     */   private Thread r;
/*     */   
/*     */   private Thread s;
/*  49 */   private boolean t = false;
/*  50 */   private String u = "";
/*     */   
/*     */   private Object[] v;
/*  53 */   private int w = 0;
/*  54 */   private int x = 0;
/*     */   
/*  56 */   public static int[] d = new int['Ā'];
/*  57 */   public static int[] e = new int['Ā'];
/*     */   
/*  59 */   public int f = 0;
/*     */   
/*     */   public pf(Socket paramSocket, String paramString, ti paramti) {
/*  62 */     this.h = paramSocket;
/*  63 */     this.i = paramSocket.getRemoteSocketAddress();
/*  64 */     this.p = paramti;
/*     */     try {
/*  66 */       paramSocket.setSoTimeout(30000);
/*  67 */       paramSocket.setTrafficClass(24);
/*     */     }
/*     */     catch (SocketException localSocketException)
/*     */     {
/*  71 */       System.err.println(localSocketException.getMessage());
/*     */     }
/*     */     
/*  74 */     this.j = new DataInputStream(paramSocket.getInputStream());
/*  75 */     this.k = new DataOutputStream(new BufferedOutputStream(paramSocket.getOutputStream(), 5120));
/*     */     
/*  77 */     this.s = new xj(this, paramString + " read thread");
/*     */     
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/* 100 */     this.r = new xl(this, paramString + " write thread");
/*     */     
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/* 130 */     this.s.start();
/* 131 */     this.r.start();
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */   public void a(ki paramki)
/*     */   {
/* 139 */     if (this.q) return;
/* 140 */     synchronized (this.g) {
/* 141 */       this.x += paramki.a() + 1;
/* 142 */       if (paramki.k) {
/* 143 */         this.o.add(paramki);
/*     */       } else {
/* 145 */         this.n.add(paramki);
/*     */       }
/*     */     }
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/* 155 */   private int y = 50;
/*     */   
/*     */   private boolean d() {
/* 158 */     boolean bool = false;
/*     */     try { ki localki;
/* 160 */       if ((!this.n.isEmpty()) && ((this.f == 0) || (System.currentTimeMillis() - ((ki)this.n.get(0)).j >= this.f)))
/*     */       {
/* 162 */         synchronized (this.g) {
/* 163 */           localki = (ki)this.n.remove(0);
/* 164 */           this.x -= localki.a() + 1;
/*     */         }
/* 166 */         ki.a(localki, this.k);
/* 167 */         e[localki.c()] += localki.a() + 1;
/* 168 */         bool = true;
/*     */       }
/*     */       
/* 171 */       if ((this.y-- <= 0) && (!this.o.isEmpty()) && ((this.f == 0) || (System.currentTimeMillis() - ((ki)this.o.get(0)).j >= this.f)))
/*     */       {
/* 173 */         synchronized (this.g) {
/* 174 */           localki = (ki)this.o.remove(0);
/* 175 */           this.x -= localki.a() + 1;
/*     */         }
/* 177 */         ki.a(localki, this.k);
/* 178 */         e[localki.c()] += localki.a() + 1;
/* 179 */         this.y = 0;
/* 180 */         bool = true;
/*     */       }
/*     */     } catch (Exception localException) {
/* 183 */       if (!this.t) a(localException);
/* 184 */       return false;
/*     */     }
/* 186 */     return bool;
/*     */   }
/*     */   
/*     */   public void a() {
/* 190 */     this.s.interrupt();
/* 191 */     this.r.interrupt();
/*     */   }
/*     */   
/*     */   private boolean e() {
/* 195 */     boolean bool = false;
/*     */     try {
/* 197 */       ki localki = ki.a(this.j, this.p.c());
/*     */       
/* 199 */       if (localki != null) {
/* 200 */         d[localki.c()] += localki.a() + 1;
/* 201 */         this.m.add(localki);
/* 202 */         bool = true;
/* 203 */       } else { a("disconnect.endOfStream", new Object[0]);
/*     */       }
/* 205 */     } catch (Exception localException) { if (!this.t) a(localException);
/* 206 */       return false;
/*     */     }
/* 208 */     return bool;
/*     */   }
/*     */   
/*     */   private void a(Exception paramException) {
/* 212 */     paramException.printStackTrace();
/* 213 */     a("disconnect.genericReason", new Object[] { "Internal exception: " + paramException.toString() });
/*     */   }
/*     */   
/*     */   public void a(String paramString, Object... paramVarArgs) {
/* 217 */     if (!this.l) return;
/* 218 */     this.t = true;
/* 219 */     this.u = paramString;
/* 220 */     this.v = paramVarArgs;
/*     */     
/* 222 */     new xg(this).start();
/*     */     
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/* 245 */     this.l = false;
/*     */     try {
/* 247 */       this.j.close();
/* 248 */       this.j = null;
/*     */     }
/*     */     catch (Throwable localThrowable1) {}
/*     */     try {
/* 252 */       this.k.close();
/* 253 */       this.k = null;
/*     */     }
/*     */     catch (Throwable localThrowable2) {}
/*     */     try {
/* 257 */       this.h.close();
/* 258 */       this.h = null;
/*     */     }
/*     */     catch (Throwable localThrowable3) {}
/*     */   }
/*     */   
/*     */   public void b() {
/* 264 */     if (this.x > 1048576) {
/* 265 */       a("disconnect.overflow", new Object[0]);
/*     */     }
/* 267 */     if (this.m.isEmpty()) {
/* 268 */       if (this.w++ == 1200) {
/* 269 */         a("disconnect.timeout", new Object[0]);
/*     */       }
/*     */     } else {
/* 272 */       this.w = 0;
/*     */     }
/*     */     
/*     */ 
/* 276 */     int i1 = 100;
/* 277 */     while ((!this.m.isEmpty()) && (i1-- >= 0)) {
/* 278 */       ki localki = (ki)this.m.remove(0);
/* 279 */       localki.a(this.p);
/*     */     }
/*     */     
/* 282 */     a();
/*     */     
/* 284 */     if ((this.t) && (this.m.isEmpty())) {
/* 285 */       this.p.a(this.u, this.v);
/*     */     }
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */   public void c()
/*     */   {
/* 294 */     a();
/* 295 */     this.q = true;
/* 296 */     this.s.interrupt();
/* 297 */     new xh(this).start();
/*     */   }
/*     */ }


/* Location:              C:\Users\Brett\AppData\Roaming\.minecraft\versions\b1.7.3_HACKS\b1.7.3_HACKS.jar!\pf.class
 * Java compiler version: 5 (49.0)
 * JD-Core Version:       0.7.1
 */