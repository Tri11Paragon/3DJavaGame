package Main;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.lwjgl.opengl.Display;
import org.lwjgl.util.vector.Vector3f;

import Entities.Camera;
import Entities.Entity;
import Entities.EntityLiving;
import Entities.Components.BounceComponent;
import Entities.Components.ComponentBase;
import Models.RawModel;
import Models.TexturedModel;
import RenderEngine.DisplayManager;
import RenderEngine.Loader;
import RenderEngine.MasterRenderer;
import Shaders.StaticShader;
import Textures.ModelTexture;
import Toolbox.Clock;
import Toolbox.Debug;

public class MainGameLoop {
	
	public static Loader loader1 = null;
	public static StaticShader shader1 = null;
	
	static List<Entity> entities = Collections.synchronizedList(new ArrayList<Entity>());
	static Vector3f camPos = new Vector3f(0,0,0);
	static List<Vector3f> usedPos = new ArrayList<Vector3f>();
	
	public static final int WORLD_SIZE = 15;
	
	static float fps;
	
	public static void main(String[] args) {
		
		DisplayManager.createDisplay();
		
		Loader loader = new Loader();
		loader1 = loader;
		StaticShader shader = new StaticShader();
		shader1 = shader;
		MasterRenderer renderer = new MasterRenderer(shader);
		
		float[] vertices = {			
				-0.5f,0.5f,-0.5f,	
				-0.5f,-0.5f,-0.5f,	
				0.5f,-0.5f,-0.5f,	
				0.5f,0.5f,-0.5f,		
				
				-0.5f,0.5f,0.5f,	
				-0.5f,-0.5f,0.5f,	
				0.5f,-0.5f,0.5f,	
				0.5f,0.5f,0.5f,
				
				0.5f,0.5f,-0.5f,	
				0.5f,-0.5f,-0.5f,	
				0.5f,-0.5f,0.5f,	
				0.5f,0.5f,0.5f,
				
				-0.5f,0.5f,-0.5f,	
				-0.5f,-0.5f,-0.5f,	
				-0.5f,-0.5f,0.5f,	
				-0.5f,0.5f,0.5f,
				
				-0.5f,0.5f,0.5f,
				-0.5f,0.5f,-0.5f,
				0.5f,0.5f,-0.5f,
				0.5f,0.5f,0.5f,
				
				-0.5f,-0.5f,0.5f,
				-0.5f,-0.5f,-0.5f,
				0.5f,-0.5f,-0.5f,
				0.5f,-0.5f,0.5f
				
		};
		
		float[] uvs = {
				
				0,0,
				0,1,
				1,1,
				1,0,			
				0,0,
				0,1,
				1,1,
				1,0,			
				0,0,
				0,1,
				1,1,
				1,0,
				0,0,
				0,1,
				1,1,
				1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0};
		
		int[] indices = {0,1,3,3,1,2,4,5,7,7,5,6,8,9,11,11,9,10,12,13,15,15,13,14,16,17,19,19,17,18,20,21,23,23,21,22};
		
		Clock clock = new Clock();
		
		RawModel model = loader.loadToVAO(vertices, indices, uvs);
		ModelTexture texture = new ModelTexture(loader.loadTexture("dirtTex"));
		TexturedModel texModel = new TexturedModel(model, texture);
		
		public EntityLiving ent = new EntityLiving(texModel, new Vector3f(0, 0, 0), 0, 0, 0, 1);
		
		Camera cam = new Camera(new Vector3f(0,16,0), 0, 0, 0);
		
		fps=1;
		
		while (!Display.isCloseRequested()) {
			renderer.prepare();
			cam.move();
			camPos = cam.getPosition();
			clock.update();
			
			fps = 1 / clock.Delta();
			Debug.Log("FPS: " + fps);
			
			shader.start();
			shader.loadViewMatrix(cam);
			
			for (int i = 0; i < entities.size(); i++) {
				renderer.render(entities.get(i), shader);
			}
			
			shader.stop();
			
			DisplayManager.updateDisplay();
			
		}
		
		DisplayManager.closeDisplay();

	}

}
