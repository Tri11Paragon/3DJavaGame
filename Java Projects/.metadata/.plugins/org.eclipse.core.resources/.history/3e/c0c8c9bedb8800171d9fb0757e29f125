/*     */ import java.io.Reader;
/*     */ import java.util.Arrays;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public final class an
/*     */ {
/*     */   public void a(Reader paramReader, wg paramwg)
/*     */   {
/*  47 */     lj locallj = new lj(paramReader);
/*  48 */     char c = (char)locallj.c();
/*  49 */     switch (c) {
/*     */     case '{': 
/*  51 */       locallj.a(c);
/*  52 */       paramwg.b();
/*  53 */       b(locallj, paramwg);
/*  54 */       break;
/*     */     case '[': 
/*  56 */       locallj.a(c);
/*  57 */       paramwg.b();
/*  58 */       a(locallj, paramwg);
/*  59 */       break;
/*     */     default: 
/*  61 */       throw new xe("Expected either [ or { but got [" + c + "].", locallj);
/*     */     }
/*  63 */     int i = l(locallj);
/*  64 */     if (i != -1) {
/*  65 */       throw new xe("Got unexpected trailing character [" + (char)i + "].", locallj);
/*     */     }
/*  67 */     paramwg.c();
/*     */   }
/*     */   
/*     */   private void a(lj paramlj, wg paramwg) {
/*  71 */     char c1 = (char)l(paramlj);
/*  72 */     if (c1 != '[') {
/*  73 */       throw new xe("Expected object to start with [ but got [" + c1 + "].", paramlj);
/*     */     }
/*  75 */     paramwg.d();
/*  76 */     char c2 = (char)l(paramlj);
/*  77 */     paramlj.a(c2);
/*  78 */     if (c2 != ']') {
/*  79 */       d(paramlj, paramwg);
/*     */     }
/*  81 */     int i = 0;
/*  82 */     while (i == 0) {
/*  83 */       char c3 = (char)l(paramlj);
/*  84 */       switch (c3) {
/*     */       case ',': 
/*  86 */         d(paramlj, paramwg);
/*  87 */         break;
/*     */       case ']': 
/*  89 */         i = 1;
/*  90 */         break;
/*     */       default: 
/*  92 */         throw new xe("Expected either , or ] but got [" + c3 + "].", paramlj);
/*     */       }
/*     */     }
/*  95 */     paramwg.e();
/*     */   }
/*     */   
/*     */   private void b(lj paramlj, wg paramwg) {
/*  99 */     char c1 = (char)l(paramlj);
/* 100 */     if (c1 != '{') {
/* 101 */       throw new xe("Expected object to start with { but got [" + c1 + "].", paramlj);
/*     */     }
/* 103 */     paramwg.f();
/* 104 */     char c2 = (char)l(paramlj);
/* 105 */     paramlj.a(c2);
/* 106 */     if (c2 != '}') {
/* 107 */       c(paramlj, paramwg);
/*     */     }
/* 109 */     int i = 0;
/* 110 */     while (i == 0) {
/* 111 */       char c3 = (char)l(paramlj);
/* 112 */       switch (c3) {
/*     */       case ',': 
/* 114 */         c(paramlj, paramwg);
/* 115 */         break;
/*     */       case '}': 
/* 117 */         i = 1;
/* 118 */         break;
/*     */       default: 
/* 120 */         throw new xe("Expected either , or } but got [" + c3 + "].", paramlj);
/*     */       }
/*     */     }
/* 123 */     paramwg.g();
/*     */   }
/*     */   
/*     */   private void c(lj paramlj, wg paramwg) {
/* 127 */     char c1 = (char)l(paramlj);
/* 128 */     if ('"' != c1) {
/* 129 */       throw new xe("Expected object identifier to begin with [\"] but got [" + c1 + "].", paramlj);
/*     */     }
/* 131 */     paramlj.a(c1);
/* 132 */     paramwg.a(i(paramlj));
/* 133 */     char c2 = (char)l(paramlj);
/* 134 */     if (c2 != ':') {
/* 135 */       throw new xe("Expected object identifier to be followed by : but got [" + c2 + "].", paramlj);
/*     */     }
/* 137 */     d(paramlj, paramwg);
/* 138 */     paramwg.h();
/*     */   }
/*     */   
/*     */   private void d(lj paramlj, wg paramwg) {
/* 142 */     char c = (char)l(paramlj);
/* 143 */     switch (c) {
/*     */     case '"': 
/* 145 */       paramlj.a(c);
/* 146 */       paramwg.c(i(paramlj));
/* 147 */       break;
/*     */     case 't': 
/* 149 */       char[] arrayOfChar1 = new char[3];
/* 150 */       int i = paramlj.b(arrayOfChar1);
/* 151 */       if ((i != 3) || (arrayOfChar1[0] != 'r') || (arrayOfChar1[1] != 'u') || (arrayOfChar1[2] != 'e')) {
/* 152 */         paramlj.a(arrayOfChar1);
/* 153 */         throw new xe("Expected 't' to be followed by [[r, u, e]], but got [" + Arrays.toString(arrayOfChar1) + "].", paramlj);
/*     */       }
/* 155 */       paramwg.i();
/*     */       
/* 157 */       break;
/*     */     case 'f': 
/* 159 */       char[] arrayOfChar2 = new char[4];
/* 160 */       int j = paramlj.b(arrayOfChar2);
/* 161 */       if ((j != 4) || (arrayOfChar2[0] != 'a') || (arrayOfChar2[1] != 'l') || (arrayOfChar2[2] != 's') || (arrayOfChar2[3] != 'e')) {
/* 162 */         paramlj.a(arrayOfChar2);
/* 163 */         throw new xe("Expected 'f' to be followed by [[a, l, s, e]], but got [" + Arrays.toString(arrayOfChar2) + "].", paramlj);
/*     */       }
/* 165 */       paramwg.j();
/*     */       
/* 167 */       break;
/*     */     case 'n': 
/* 169 */       char[] arrayOfChar3 = new char[3];
/* 170 */       int k = paramlj.b(arrayOfChar3);
/* 171 */       if ((k != 3) || (arrayOfChar3[0] != 'u') || (arrayOfChar3[1] != 'l') || (arrayOfChar3[2] != 'l')) {
/* 172 */         paramlj.a(arrayOfChar3);
/* 173 */         throw new xe("Expected 'n' to be followed by [[u, l, l]], but got [" + Arrays.toString(arrayOfChar3) + "].", paramlj);
/*     */       }
/* 175 */       paramwg.k();
/*     */       
/* 177 */       break;
/*     */     case '-': 
/*     */     case '0': 
/*     */     case '1': 
/*     */     case '2': 
/*     */     case '3': 
/*     */     case '4': 
/*     */     case '5': 
/*     */     case '6': 
/*     */     case '7': 
/*     */     case '8': 
/*     */     case '9': 
/* 189 */       paramlj.a(c);
/* 190 */       paramwg.b(a(paramlj));
/* 191 */       break;
/*     */     case '{': 
/* 193 */       paramlj.a(c);
/* 194 */       b(paramlj, paramwg);
/* 195 */       break;
/*     */     case '[': 
/* 197 */       paramlj.a(c);
/* 198 */       a(paramlj, paramwg);
/* 199 */       break;
/*     */     default: 
/* 201 */       throw new xe("Invalid character at start of value [" + c + "].", paramlj);
/*     */     }
/*     */   }
/*     */   
/*     */   private String a(lj paramlj) {
/* 206 */     StringBuilder localStringBuilder = new StringBuilder();
/* 207 */     char c = (char)paramlj.c();
/* 208 */     if ('-' == c) {
/* 209 */       localStringBuilder.append('-');
/*     */     } else {
/* 211 */       paramlj.a(c);
/*     */     }
/* 213 */     localStringBuilder.append(b(paramlj));
/* 214 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private String b(lj paramlj) {
/* 218 */     StringBuilder localStringBuilder = new StringBuilder();
/* 219 */     char c = (char)paramlj.c();
/* 220 */     if ('0' == c) {
/* 221 */       localStringBuilder.append('0');
/* 222 */       localStringBuilder.append(f(paramlj));
/* 223 */       localStringBuilder.append(g(paramlj));
/*     */     } else {
/* 225 */       paramlj.a(c);
/* 226 */       localStringBuilder.append(c(paramlj));
/* 227 */       localStringBuilder.append(e(paramlj));
/* 228 */       localStringBuilder.append(f(paramlj));
/* 229 */       localStringBuilder.append(g(paramlj));
/*     */     }
/* 231 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private char c(lj paramlj)
/*     */   {
/* 236 */     char c2 = (char)paramlj.c();
/* 237 */     char c1; switch (c2) {
/*     */     case '1': 
/*     */     case '2': 
/*     */     case '3': 
/*     */     case '4': 
/*     */     case '5': 
/*     */     case '6': 
/*     */     case '7': 
/*     */     case '8': 
/*     */     case '9': 
/* 247 */       c1 = c2;
/* 248 */       break;
/*     */     default: 
/* 250 */       throw new xe("Expected a digit 1 - 9 but got [" + c2 + "].", paramlj);
/*     */     }
/* 252 */     return c1;
/*     */   }
/*     */   
/*     */   private char d(lj paramlj)
/*     */   {
/* 257 */     char c2 = (char)paramlj.c();
/* 258 */     char c1; switch (c2) {
/*     */     case '0': 
/*     */     case '1': 
/*     */     case '2': 
/*     */     case '3': 
/*     */     case '4': 
/*     */     case '5': 
/*     */     case '6': 
/*     */     case '7': 
/*     */     case '8': 
/*     */     case '9': 
/* 269 */       c1 = c2;
/* 270 */       break;
/*     */     default: 
/* 272 */       throw new xe("Expected a digit 1 - 9 but got [" + c2 + "].", paramlj);
/*     */     }
/* 274 */     return c1;
/*     */   }
/*     */   
/*     */   private String e(lj paramlj) {
/* 278 */     StringBuilder localStringBuilder = new StringBuilder();
/* 279 */     int i = 0;
/* 280 */     while (i == 0) {
/* 281 */       char c = (char)paramlj.c();
/* 282 */       switch (c) {
/*     */       case '0': 
/*     */       case '1': 
/*     */       case '2': 
/*     */       case '3': 
/*     */       case '4': 
/*     */       case '5': 
/*     */       case '6': 
/*     */       case '7': 
/*     */       case '8': 
/*     */       case '9': 
/* 293 */         localStringBuilder.append(c);
/* 294 */         break;
/*     */       default: 
/* 296 */         i = 1;
/* 297 */         paramlj.a(c);
/*     */       }
/*     */     }
/* 300 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private String f(lj paramlj) {
/* 304 */     StringBuilder localStringBuilder = new StringBuilder();
/* 305 */     char c = (char)paramlj.c();
/* 306 */     if (c == '.') {
/* 307 */       localStringBuilder.append('.');
/* 308 */       localStringBuilder.append(d(paramlj));
/* 309 */       localStringBuilder.append(e(paramlj));
/*     */     } else {
/* 311 */       paramlj.a(c);
/*     */     }
/* 313 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private String g(lj paramlj) {
/* 317 */     StringBuilder localStringBuilder = new StringBuilder();
/* 318 */     char c = (char)paramlj.c();
/* 319 */     if ((c == '.') || (c == 'E')) {
/* 320 */       localStringBuilder.append('E');
/* 321 */       localStringBuilder.append(h(paramlj));
/* 322 */       localStringBuilder.append(d(paramlj));
/* 323 */       localStringBuilder.append(e(paramlj));
/*     */     } else {
/* 325 */       paramlj.a(c);
/*     */     }
/* 327 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private String h(lj paramlj) {
/* 331 */     StringBuilder localStringBuilder = new StringBuilder();
/* 332 */     char c = (char)paramlj.c();
/* 333 */     if ((c == '+') || (c == '-')) {
/* 334 */       localStringBuilder.append(c);
/*     */     } else {
/* 336 */       paramlj.a(c);
/*     */     }
/* 338 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private String i(lj paramlj)
/*     */   {
/* 343 */     StringBuilder localStringBuilder = new StringBuilder();
/* 344 */     char c1 = (char)paramlj.c();
/* 345 */     if ('"' != c1) {
/* 346 */       throw new xe("Expected [\"] but got [" + c1 + "].", paramlj);
/*     */     }
/* 348 */     int i = 0;
/* 349 */     while (i == 0) {
/* 350 */       char c2 = (char)paramlj.c();
/* 351 */       switch (c2) {
/*     */       case '"': 
/* 353 */         i = 1;
/* 354 */         break;
/*     */       case '\\': 
/* 356 */         char c3 = j(paramlj);
/* 357 */         localStringBuilder.append(c3);
/* 358 */         break;
/*     */       default: 
/* 360 */         localStringBuilder.append(c2);
/*     */       }
/*     */     }
/* 363 */     return localStringBuilder.toString();
/*     */   }
/*     */   
/*     */   private char j(lj paramlj)
/*     */   {
/* 368 */     char c2 = (char)paramlj.c();
/* 369 */     char c1; switch (c2) {
/*     */     case '"': 
/* 371 */       c1 = '"';
/* 372 */       break;
/*     */     case '\\': 
/* 374 */       c1 = '\\';
/* 375 */       break;
/*     */     case '/': 
/* 377 */       c1 = '/';
/* 378 */       break;
/*     */     case 'b': 
/* 380 */       c1 = '\b';
/* 381 */       break;
/*     */     case 'f': 
/* 383 */       c1 = '\f';
/* 384 */       break;
/*     */     case 'n': 
/* 386 */       c1 = '\n';
/* 387 */       break;
/*     */     case 'r': 
/* 389 */       c1 = '\r';
/* 390 */       break;
/*     */     case 't': 
/* 392 */       c1 = '\t';
/* 393 */       break;
/*     */     case 'u': 
/* 395 */       c1 = (char)k(paramlj);
/* 396 */       break;
/*     */     default: 
/* 398 */       throw new xe("Unrecognised escape character [" + c2 + "].", paramlj);
/*     */     }
/* 400 */     return c1;
/*     */   }
/*     */   
/*     */   private int k(lj paramlj) {
/* 404 */     char[] arrayOfChar = new char[4];
/* 405 */     int i = paramlj.b(arrayOfChar);
/* 406 */     if (i != 4) {
/* 407 */       throw new xe("Expected a 4 digit hexidecimal number but got only [" + i + "], namely [" + String.valueOf(arrayOfChar, 0, i) + "].", paramlj);
/*     */     }
/*     */     int j;
/*     */     try {
/* 411 */       j = Integer.parseInt(String.valueOf(arrayOfChar), 16);
/*     */     } catch (NumberFormatException localNumberFormatException) {
/* 413 */       paramlj.a(arrayOfChar);
/* 414 */       throw new xe("Unable to parse [" + String.valueOf(arrayOfChar) + "] as a hexidecimal number.", localNumberFormatException, paramlj);
/*     */     }
/* 416 */     return j;
/*     */   }
/*     */   
/*     */   private int l(lj paramlj)
/*     */   {
/* 421 */     int j = 0;
/*     */     int i;
/* 423 */     do { i = paramlj.c();
/* 424 */       switch (i) {
/*     */       case 9: 
/*     */       case 10: 
/*     */       case 13: 
/*     */       case 32: 
/*     */         break;
/*     */       default: 
/* 431 */         j = 1;
/*     */       }
/* 433 */     } while (j == 0);
/* 434 */     return i;
/*     */   }
/*     */ }


/* Location:              C:\Users\Brett\AppData\Roaming\.minecraft\versions\b1.7.3_HACKS\b1.7.3_HACKS.jar!\an.class
 * Java compiler version: 5 (49.0)
 * JD-Core Version:       0.7.1
 */